import time
import qrcode
from pyteal import *
from algosdk import algod, account, encoding, mnemonic
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler

# Replace with your Algorand node URL and API token
algod_address = 'https://testnet-algorand.api.purestake.io/ps2'
algod_token = {'X-API-Key': 'YOUR_ALGOD_API_KEY'}
algod_client = algod.AlgodClient(algod_token, algod_address)

# Replace with your PyTeal smart contract
approval_program = compileTeal(ApprovalProgram(), mode=Mode.Application)
clear_state_program = compileTeal(ClearStateProgram(), mode=Mode.Application)

# Replace with your Telegram bot API token
updater = Updater(token='YOUR_TELEGRAM_BOT_TOKEN', use_context=True)
dispatcher = updater.dispatcher

# Dictionary to store the votes
votes = {
    'yes': 0,
    'no': 0,
}

# Start command handler
def start(update, context):
    context.bot.send_message(chat_id=update.effective_chat.id, text="Hello! Use /vote to start a new vote.")

# Vote command handler
def vote(update, context):
    # Check if there is an ongoing vote
    if votes['yes'] + votes['no'] > 0:
        context.bot.send_message(chat_id=update.effective_chat.id, text="There is already an ongoing vote.")
        return

    # Generate a new address for the vote
    private_key, address = account.generate_account()

    # Generate a QR code for the address
    qr = qrcode.QRCode(version=1, box_size=10, border=4)
    qr.add_data(f'algorand:{address}')
    qr.make(fit=True)
    img = qr.make_image(fill_color="black", back_color="white")
    img.save('qr.png')

    # Send the QR code to the user
    context.bot.send_photo(chat_id=update.effective_chat.id, photo=open('qr.png', 'rb'))

    # Wait for 24 hours
    time.sleep(86400)

    # Get the current round number
    status = algod_client.status()
    current_round = status['last-round']

    # Get the transaction information
    txs = algod_client.transaction_info(address, current_round - 100, current_round)

    # Count the votes
    for tx in txs:
        if tx['tx']['txn']['type'] == 'pay':
            amount = tx['tx']['txn']['amt']
            if amount == 1:
                votes['yes'] += 1
            elif amount == 2:
                votes['no'] += 1

    # Display the results
    context.bot.send_message(chat_id=update.effective_chat.id, text=f"Approve/Yes: {votes['yes']}\nDeny/No: {votes['no']}")

#
